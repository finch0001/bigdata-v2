name = PropertiesConfig
property.filename = ./logs

#appenders = console, file
appenders = rolling

appender.rolling.type = RollingFile
appender.rolling.name = RollingLogFile
appender.rolling.fileName=${filename}/app.log
# 后缀加上.gz时,日志文件自动压缩
appender.rolling.filePattern = ${filename}/app-%d{yyyy-MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

appender.rolling.policies.type = Policies

# 基于大小
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

# 基于时间
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
# 切割的间隔为1小时, 即每小时进行一次日志的归档
#appender.rolling.policies.time.interval = 1
#appender.rolling.policies.time.modulate = true

appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${filename}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# Delete files older than 7 days
appender.rolling.strategy.delete.ifLastModified.age = 7d


rootLogger.level = trace
rootLogger.appenderRef.rolling.ref = RollingLogFile